Code Coverage Patch
====================

Go's code coverage is based on generating a manifest of all the files that are built.
Since Encore's code generation adds some extra files, this doesn't quite work.
This patch fixes this by skipping over these files, and reading the source file
using the overlay file system instead of directly from disk.

diff --git a/src/cmd/go/internal/work/exec.go b/src/cmd/go/internal/work/exec.go
index 9c8b14df00..3589919249 100644
--- a/src/cmd/go/internal/work/exec.go
+++ b/src/cmd/go/internal/work/exec.go
@@ -642,12 +642,13 @@ OverlayLoop:
 				key = file
 			}
 			coverFile = strings.TrimSuffix(coverFile, ".go") + ".cover.go"
+			sourceFile, _ = fsys.OverlayPath(sourceFile)
 			if cfg.Experiment.CoverageRedesign {
 				infiles = append(infiles, sourceFile)
 				outfiles = append(outfiles, coverFile)
 			} else {
 				cover := p.Internal.CoverVars[key]
-				if cover == nil {
+				if cover == nil || base.IsTestFile(file) {
 					continue // Not covering this file.
 				}
 				if err := b.cover(a, coverFile, sourceFile, cover.Var); err != nil {
