Encore Version Patch
=======================

This patch modifies the Go build tools (those which build Go itself) to add a "encore" suffix to the version tag, this
allows us to identify if the Go runtime being used is an Encore patched runtime or it is a standard Go runtime.

It changes the output of `go version` from:
    `go version go1.21.0 darwin/arm64`
to:
    `go version go1.21.0-encore darwin/arm64`

diff --git a/src/cmd/dist/build.go b/src/cmd/dist/build.go
index 8973a87168..8fd7b01a15 100644
--- a/src/cmd/dist/build.go
+++ b/src/cmd/dist/build.go
@@ -393,7 +393,8 @@ func findgoversion() string {
 		// its content if available, which is empty at this point.
 		// Only use the VERSION file if it is non-empty.
 		if b != "" {
-			return b
+			// incase we cached the version with -encore suffix, trim it before re-adding it
+			return strings.TrimSuffix(b, "-encore") + "-encore"
 		}
 	}

@@ -424,7 +425,7 @@ func findgoversion() string {
 	if m == nil {
 		fatalf("internal/goversion/goversion.go does not contain 'const Version = ...'")
 	}
-	version := fmt.Sprintf("devel go1.%s-", m[1])
+	version := fmt.Sprintf("devel go1.%s-encore-", m[1])
 	version += chomp(run(goroot, CheckExit, "git", "log", "-n", "1", "--format=format:%h %cd", "HEAD"))

 	// Cache version.
